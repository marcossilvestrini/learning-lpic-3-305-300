# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV["VAGRANT_EXPERIMENTAL"] = "Disks"

# Plugins
required_plugins = ["vagrant-vmware-desktop", "vagrant-reload", "vagrant-disksize"]
required_plugins.each do |plugin|
  unless Vagrant.has_plugin?(plugin)
    system "vagrant plugin install #{plugin}"
    puts "Installed the #{plugin} plugin."
  end
end

Vagrant.configure("2") do |config|
  config.vm.box_download_insecure = true

  # Providers
  # config.vm.provider :vmware_workstation

  # Boxes
  # config.vm.box = "generic/ubuntu2204"
  # config.vm.box_version = "4.3.12"
  config.vm.box = "generic/debian12"
  config.vm.box_version = "4.3.12"

  # vbguest plugin
  config.vbguest.auto_update = false
  config.vbguest.no_install = true
  config.vbguest.no_remote = true

  # Storage
  config.vm.disk :disk, size: "200GB", name: "xen", primary: false

  # shared folders
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "../../scripts/", "/home/vagrant/scripts"
  config.vm.synced_folder "../../configs/", "/home/vagrant/configs"
  config.vm.synced_folder "../../security/", "/home/vagrant/security"

  config.vm.define "instance1" do |instance1|

    # Netwwork
    instance1.vm.network "public_network", mode: "bridge", auto_config: false ### NETWORK_CONFIG_PLACEHOLDER
    # manual ip
    instance1.vm.provision "shell",
      run: "always",
      inline: "ifconfig eth1 192.168.0.130 netmask 255.255.255.0 up"
    # default router
    instance1.vm.provision "shell",
      run: "always",
      inline: "route add default gw 192.168.0.1"
    # delete default gw on eth0
    instance1.vm.provision "shell",
      run: "always",
      inline: "eval `route -n | awk '{ if ($8 ==\"eth0\" && $2 != \"0.0.0.0\") print \"route del default gw \" $2; }'`"

    # Provider VMware
    instance1.vm.provider "vmware_workstation" do |vmware|
      vmware.gui = true
      vmware.linked_clone = false
      vmware.clone_directory = "E:\\Servers\\VMWare\\instance-1"
      vmware.whitelist_verified = true
      vmware.gui = true
      vmware.vmx["displayName"] = "instance-1"
      vmware.vmx["memsize"] = "4096"
      vmware.vmx["numvcpus"] = "2"
      vmware.vmx["cpuid.coresPerSocket"] = "1"
      vmware.vmx["vhv.enable"] = "TRUE"  # Habilitar virtualização para o host (nested)
    end

    instance1.vm.provision "shell", name: "[cloud-init]", path: "../../scripts/commons/cloud-init.sh", privileged: false
    instance1.vm.provision "shell", name: "Debian 12 Provision", path: "../../scripts/xen/debian.sh", privileged: false
    instance1.vm.provision :reload
  end
end
